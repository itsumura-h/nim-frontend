/* Generated by the Nim Compiler v1.6.10 */
var framePtr = null;
var excHandler = 0;
var lastJSError = null;
var NTI939524124 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554456 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI939524127 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI939524100 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI33554440 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI939524103 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NNI939524103 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554440, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI939524100, name: "Field1", sons: null}]};
NTI939524103.node = NNI939524103;
var NNI939524127 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI33554456, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI939524124, name: "Field1", sons: null}]};
NTI939524127.node = NNI939524127;

function setConstr() {
        var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

  
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_33557140, src_33557141, ti_33557142) {
  var result_33557151 = null;

    switch (ti_33557142.kind) {
    case 21:
    case 22:
    case 23:
    case 5:
      if (!(isFatPointer_33557131(ti_33557142))) {
      result_33557151 = src_33557141;
      }
      else {
        result_33557151 = [src_33557141[0], src_33557141[1]];
      }
      
      break;
    case 19:
            if (dest_33557140 === null || dest_33557140 === undefined) {
        dest_33557140 = {};
      }
      else {
        for (var key in dest_33557140) { delete dest_33557140[key]; }
      }
      for (var key in src_33557141) { dest_33557140[key] = src_33557141[key]; }
      result_33557151 = dest_33557140;
    
      break;
    case 18:
    case 17:
      if (!((ti_33557142.base == null))) {
      result_33557151 = nimCopy(dest_33557140, src_33557141, ti_33557142.base);
      }
      else {
      if ((ti_33557142.kind == 17)) {
      result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {m_type: ti_33557142} : dest_33557140;
      }
      else {
        result_33557151 = (dest_33557140 === null || dest_33557140 === undefined) ? {} : dest_33557140;
      }
      }
      nimCopyAux(result_33557151, src_33557141, ti_33557142.node);
      break;
    case 24:
    case 4:
    case 27:
    case 16:
            if (src_33557141 === null) {
        result_33557151 = null;
      }
      else {
        if (dest_33557140 === null || dest_33557140 === undefined || dest_33557140.length != src_33557141.length) {
          dest_33557140 = new Array(src_33557141.length);
        }
        result_33557151 = dest_33557140;
        for (var i = 0; i < src_33557141.length; ++i) {
          result_33557151[i] = nimCopy(result_33557151[i], src_33557141[i], ti_33557142.base);
        }
      }
    
      break;
    case 28:
            if (src_33557141 !== null) {
        result_33557151 = src_33557141.slice(0);
      }
    
      break;
    default: 
      result_33557151 = src_33557141;
      break;
    }

  return result_33557151;

}
if (!Math.trunc) {
  Math.trunc = function(v) {
    v = +v;
    if (!isFinite(v)) return v;
    return (v - v % 1) || (v < 0 ? -0 : v === 0 ? v : 0);
  };
}

var objectID_671088802 = [0];
import { html, render } from 'https://unpkg.com/htm/preact/index.mjs?module';
import { useState, useEffect } from 'https://unpkg.com/preact@latest/hooks/dist/hooks.module.js?module'

function renderApp(component, dom){
  render(html`<${component} />`, dom)
}


function isFatPointer_33557131(ti_33557132) {
  var result_33557133 = false;

  BeforeRet: do {
    result_33557133 = !((ConstSet1[ti_33557132.base.kind] != undefined));
    break BeforeRet;
  } while (false);

  return result_33557133;

}

function nimCopyAux(dest_33557144, src_33557145, n_33557146) {
    switch (n_33557146.kind) {
    case 0:
      break;
    case 1:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
    
      break;
    case 2:
          for (var i = 0; i < n_33557146.sons.length; i++) {
      nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i]);
    }
    
      break;
    case 3:
            dest_33557144[n_33557146.offset] = nimCopy(dest_33557144[n_33557146.offset], src_33557145[n_33557146.offset], n_33557146.typ);
      for (var i = 0; i < n_33557146.sons.length; ++i) {
        nimCopyAux(dest_33557144, src_33557145, n_33557146.sons[i][1]);
      }
    
      break;
    }

  
}

function useState_939524105(arg_939524106) {
  var result_939524107 = {Field0: null, Field1: null};

  BeforeRet: do {
    var state_939524108 = useState(arg_939524106);
    var value_939524113 = (state_939524108[0]);
    var setter_939524118 = (state_939524108[1]);
    var colontmp__469762098 = value_939524113;
    var colontmp__469762099 = setter_939524118;
    result_939524107 = nimCopy(result_939524107, {Field0: colontmp__469762098, Field1: colontmp__469762099}, NTI939524103);
    break BeforeRet;
  } while (false);

  return result_939524107;

}

function useState_939524143(arg_939524144) {
  var result_939524145 = {Field0: 0, Field1: null};

  BeforeRet: do {
    var state_939524146 = useState(arg_939524144);
    var value_939524151 = (state_939524146[0]);
    var setter_939524156 = (state_939524146[1]);
    var colontmp__469762101 = value_939524151;
    var colontmp__469762102 = setter_939524156;
    result_939524145 = nimCopy(result_939524145, {Field0: colontmp__469762101, Field1: colontmp__469762102}, NTI939524127);
    break BeforeRet;
  } while (false);

  return result_939524145;

}

function child(props_469762053) {
    
function setMsgFunc(e_469762073) {
        setMsg_469762069(e_469762073.target.value);

      
    }
    
function HEX3Aanonymous_469762074() {
        setMsgLen_469762071(((msg) == null ? 0 : (msg).length));

      
    }

    var propsName = props_469762053.name;
    var colontmp__469762097 = useState_939524105("message");
    var msg = colontmp__469762097["Field0"];
    var setMsg_469762069 = colontmp__469762097["Field1"];
    var colontmp__469762100 = useState_939524143(0);
    var msgLen = colontmp__469762100["Field0"];
    var setMsgLen_469762071 = colontmp__469762100["Field1"];
    useEffect(HEX3Aanonymous_469762074, [msg]);
    return html`    <p>Hello ${propsName}!</p>
    <form>
      <input type="text" oninput=${setMsgFunc} value=${msg} />
      <p>this is a ${msg}</p>
      <p>message lenght is ${msgLen}</p>
    </form>
  `

  
}

function App() {
    return html`    <h1>Hello</h1>
    <${child} name="John"/>
  `

  
}
renderApp(App, document.getElementById("app"));
